{"version":3,"sources":["fbase.js","routes/Auth.js","components/Nweet.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Auth","useState","email","setEamil","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","Home","userObj","nweet","setNweet","nweets","setNweets","attachment","setAttachment","useEffect","collection","onSnapshot","snapshot","newArray","docs","map","document","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Profile","history","useHistory","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","currentUser","setIsLoggedIn","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.38e96e47.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport \"firebase/compat/storage\";\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n\n\n\n","import { authService, firebaseInstance } from \"fbase\";\nimport { useState } from \"react\";\n\n\nconst Auth=()=>{\n    const[email, setEamil]=useState(\"\");\n    const[password, setPassword]=useState(\"\");\n    const[newAccount, setNewAccount]=useState(true);\n    const[error,setError]=useState(\"\")\n\n    const onChange=(event)=>{\n        const{\n            target: {name, value},\n\n        }= event;\n        if (name===\"email\"){\n            setEamil(value);\n\n        }else if (name===\"password\"){\n            setPassword(value);\n        }\n    };\n    const onSubmit=async(event)=>{\n        event.preventDefault();\n        try{\n            let data;\n            if(newAccount){\n                data=await authService.createUserWithEmailAndPassword(email,password);\n                // create\n            } else{\n                data=await authService.signInWithEmailAndPassword(email, password);\n                //login\n            }\n            console.log(data);\n        }catch(error){\n            setError(error.message);\n\n        }\n        // try catch \n        \n    }\n    const toggleAccount=()=>setNewAccount((prev)=>!prev);\n    \n    const onSocialClick=async(event)=>{\n        const{\n            target:{name},\n        }=event;\n        let provider;\n        if(name===\"google\"){\n            provider=new firebaseInstance.auth.GoogleAuthProvider();\n\n        }else if(name===\"github\"){\n            provider=new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data=await authService.signInWithPopup(provider);\n        console.log(data);\n    };\n\n    return(\n        <div>\n            <form onSubmit={onSubmit}>\n                <input name=\"email\" type=\"email\" placeholder=\"이메일을 입력하세요\" required value={email} onChange={onChange}/>\n                <input name =\"password\" type=\"password\" placeholder=\"비밀번호를 입력하세요\" required value={password} onChange={onChange}/>\n                <input type=\"submit\" value={newAccount ? \"계정 생성하기\":\"로그인\"} />\n                {error}\n                    \n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"로그인 모드 전환(클릭)\": \"신규계정 생성하기 모드 전환(클릭)\"}</span>\n\n            <div>\n                <button onClick={onSocialClick} name=\"google\">Google로 로그인하기 </button>\n                </div><div>\n                <button onClick={onSocialClick} name=\"github\">github계정으로 로그인하기</button>\n\n            </div>\n        </div>\n    )\n}\nexport default  Auth;\n","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    console.log(ok);\n    if (ok) {\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      if (nweetObj.attachmentUrl !== \"\")\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n    setEditing(false);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input onChange={onChange} value={newNweet} required />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n\nconst Home = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [nweets, setNweets] = useState([]);\n    const [attachment, setAttachment] = useState(\"\");\n\n  \n    useEffect(() => {\n      dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n        const newArray = snapshot.docs.map((document) => ({\n          id: document.id,\n          ...document.data(),\n        }));\n        setNweets(newArray);\n      });\n    }, []);\n  \n    const onSubmit = async (event) => {\n      event.preventDefault();\n      let attachmentUrl = \"\";\n      if (attachment !== \"\") {\n        const attachmentRef = storageService\n          .ref()\n          .child(`${userObj.uid}/${uuidv4()}`);\n        const response = await attachmentRef.putString(attachment, \"data_url\");\n        attachmentUrl = await response.ref.getDownloadURL();\n      }\n      await dbService.collection(\"nweets\").add({\n        text: nweet,\n        createdAt: Date.now(),\n        creatorId: userObj.uid,\n        attachmentUrl\n      });\n      setNweet(\"\");\n      setAttachment(\"\");\n\n    };\n  \n    const onChange = (event) => {\n      event.preventDefault();\n      const {\n        target: { value },\n      } = event;\n      setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n      const {\n        target: { files },\n      } = event;\n      const theFile = files[0];\n      const reader = new FileReader();\n      reader.onloadend = (finishedEvent) => {\n        const {\n          currentTarget: { result },\n        } = finishedEvent;\n        setAttachment(result);\n      };\n      reader.readAsDataURL(theFile);\n    };\n  \n    const onClearAttachment = () => setAttachment(\"\");\n  \n  \n    return (\n      <>\n        <form onSubmit={onSubmit}>\n          <input\n            value={nweet}\n            onChange={onChange}\n            type=\"text\"\n            placeholder=\"오늘 나의 기분은 어때요?\"\n            maxLength={120}\n          />\n          \n          <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n          <input type=\"submit\" value=\"게시글 올리기\" />\n          {attachment && (\n          <div>\n            <img src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n        </form>\n        <div>\n          {nweets.map((nweet) => (\n            <Nweet\n              key={nweet.id}\n              nweetObj={nweet}\n              isOwner={nweet.creatorId === userObj.uid}\n            />\n          ))}\n        </div>\n      </>\n    );\n  };\n  \n  export default Home;","import { authService } from \"fbase\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = () => {\n    const history = useHistory();\n  \n    const onLogOutClick = () => {\n      authService.signOut();\n      history.push(\"/\");\n    };\n  \n    return (\n      <>\n        <button onClick={onLogOutClick}>Log Out</button>\n      </>\n    );\n  };\n  \n  export default Profile;","import { Link } from \"react-router-dom\";\n\nconst Navigation = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">홈화면</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">나의 프로필(현재 로그아웃 버튼 페이지 이동 전용)</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;","import { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\"\nimport Navigation  from \"./Navigation\";\n\n\nconst AppRouter = ({ isLoggedIn, userObj }) => {\n    return( \n        <Router>\n            {isLoggedIn &&<Navigation />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                    <Route exact path=\"/\">\n                    <Home userObj={userObj} />\n                    </Route>\n                    <Route exact path=\"/profile\">\n                        <Profile />\n                    </Route>\n                    </>\n                ):(\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n        \n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect,useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\";\n\nfunction App(){\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(user);\n        setUserObj(user);\n\n      } else {\n        setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      \n      {init ? (\n        <AppRouter isLoggedIn={isLoggedIn} userObj={userObj} />\n      ) : (\n        \"initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"components/App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}